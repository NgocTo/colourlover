{"version":3,"sources":["Color.js","Palette.js","Pattern.js","RPalette.js","RPattern.js","Paragraph.js","App.js","serviceWorker.js","index.js"],"names":["$","window","Color","state","tooltip","copyHex","e","hex","preventDefault","val","select","document","execCommand","_this","setState","resetTooltip","_this2","this","color","props","react_default","a","createElement","className","data-toggle","data-placement","style","backgroundColor","title","onClick","Component","Palette","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","palettes","fetch","then","results","json","data","type","id","map","palette","key","colors","i","src_Color","Pattern","patterns","pattern","href","url","src","badgeUrl","alt","paletteUrl","RPalette","fetchRPalette","Fragment","Button","variant","patternUrl","RPattern","fetchRPattern","Paragraph","context","handleBackground","background","target","value","handleTitle","handleSubtitle","subtitle","handleText","text","handleLink","link","open","_this$state","aria-controls","aria-expanded","Collapse","in","Form","Group","as","RB","controlId","Label","column","xs","Col","Control","placeholder","onChange","Card","Body","Title","Subtitle","Text","Link","App","Tabs","defaultActiveKey","Tab","eventKey","src_Paragraph","heading","button","buttonText","src_RPalette","src_Palette","src_RPattern","src_Pattern","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aed4bea7.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nconst $ = window.$;\r\nclass Color extends Component {\r\n  state = {\r\n    tooltip: \"Copy Hex\"\r\n  };\r\n  componentDidMount() {\r\n    $('[data-toggle=\"tooltip\"]').tooltip();\r\n  }\r\n  componentDidUpdate() {\r\n    $('[data-toggle=\"tooltip\"]').tooltip();\r\n  }\r\n  copyHex = (e, hex) => {\r\n    e.preventDefault();\r\n    var input = $('#hexValue').val(hex);\r\n    input.select();\r\n    document.execCommand('copy');\r\n    this.setState({\r\n      tooltip: \"Copied\"\r\n    })\r\n  }\r\n  resetTooltip = e => {\r\n    this.setState({\r\n      tooltip: \"Copy Hex\"\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {color} = this.props;\r\n    const {tooltip} = this.state;\r\n    return (\r\n      <span className=\"color\"\r\n        data-toggle=\"tooltip\" \r\n        data-placement=\"top\" \r\n        style={{backgroundColor: \"#\" + color, color: \"#\" + color}} title={tooltip}\r\n        onClick={(e) => {\r\n          this.resetTooltip()\r\n          this.copyHex(e, color)\r\n          $('.color').tooltip('dispose');\r\n        }}>\r\n        #{color}\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Color;\r\n","import React, { Component } from 'react';\r\nimport Color from './Color';\r\n// import './App.css';\r\n\r\nconst paletteUrl = 'http://ngocto.com/api/palettes.php';\r\nclass Palette extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      palettes : []\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    fetch(paletteUrl)\r\n    .then(results => {\r\n      return results.json();\r\n    })\r\n    .then(data => {\r\n      this.setState({\r\n        palettes: data\r\n      })\r\n    })\r\n  }\r\n  render() {\r\n    const {palettes} = this.state;\r\n    return (\r\n      <div className=\"row\">\r\n      \r\n      <input type=\"text\" id=\"hexValue\" className=\"hidden\"></input>\r\n      {palettes.map((palette) => \r\n        <div key={palette.id} className=\"item-container col-12 col-md-6 col-lg-4\">\r\n          <h3 className=\"h5\">{palette.title}</h3>\r\n          <div>\r\n            {palette.colors.map((color,i) => \r\n            <Color color={color} key={i}  />\r\n            )}\r\n          </div>\r\n        </div>\r\n      )};\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Palette;\r\n","import React, { Component } from 'react';\r\n\r\nconst patternUrl = 'http://ngocto.com/api/patterns.php';\r\nclass Pattern extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      patterns : []\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    fetch(patternUrl)\r\n    .then(results => {\r\n      return results.json();\r\n    })\r\n    .then(data => {\r\n      this.setState({\r\n        patterns: data\r\n      })\r\n    })\r\n  }\r\n  render() {\r\n    const {patterns} = this.state;\r\n    return (\r\n      <div className=\"row\">\r\n      {patterns.map((pattern) => \r\n        <div key={pattern.id} className=\"item-container col-12 col-md-6 col-lg-4\">\r\n          <h3 className=\"h5\">{pattern.title}</h3>\r\n          <a href={pattern.url}><img src={pattern.badgeUrl} alt={pattern.title}/></a>\r\n        </div>\r\n      )};\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Pattern;\r\n","import React, { Component } from 'react';\r\nimport Color from './Color';\r\nimport * as RB from 'react-bootstrap';\r\n\r\nconst paletteUrl = 'http://ngocto.com/api/randomizePalette.php';\r\nclass RPalette extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      palettes : []\r\n    }\r\n  }\r\n  fetchRPalette = () => {\r\n    fetch(paletteUrl)\r\n    .then(results => {\r\n      return results.json();\r\n    })\r\n    .then(data => {\r\n      this.setState({\r\n        palettes: data\r\n      })\r\n    })\r\n  }\r\n  render() {\r\n    const {palettes} = this.state;\r\n    return (\r\n      <>\r\n        <RB.Button id=\"paletteRandomize\" variant=\"link\" onClick={this.fetchRPalette}>Random Palette</RB.Button>\r\n        <input type=\"text\" id=\"hexValue\" className=\"hidden\"></input>\r\n        {palettes.map((palette) => \r\n          <div key={palette.id} className=\"item-container\">\r\n            <h3 className=\"h5\">{palette.title}</h3>\r\n            <div>\r\n              {palette.colors.map((color,i) => \r\n              <Color color={color} key={i}  />\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default RPalette;\r\n","import React, { Component } from 'react';\r\nimport * as RB from 'react-bootstrap';\r\n\r\nconst patternUrl = 'http://ngocto.com/api/randomizePattern.php';\r\nclass RPattern extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      patterns : []\r\n    }\r\n  }\r\n  fetchRPattern = () => {\r\n    fetch(patternUrl)\r\n    .then(results => {\r\n      return results.json();\r\n    })\r\n    .then(data => {\r\n      this.setState({\r\n        patterns: data\r\n      })\r\n    })\r\n  }\r\n  render() {\r\n    const {patterns} = this.state;\r\n    return (\r\n      <div>\r\n        <RB.Button id=\"patternRandomize\" variant=\"link\" onClick={this.fetchRPattern}>Random Pattern</RB.Button>\r\n        {patterns.map((pattern) => \r\n          <div key={pattern.id} className=\"item-container\">\r\n            <h3 className=\"h5\">{pattern.title}</h3>\r\n            <a href={pattern.url}><img src={pattern.badgeUrl} alt={pattern.title}/></a>\r\n          </div>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default RPattern;\r\n","import React, { Component } from 'react';\r\nimport * as RB from 'react-bootstrap';\r\n\r\nclass Paragraph extends Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.state = {\r\n      open: false,\r\n      background: \"\",\r\n      title: \"\",\r\n      subtitle: \"\",\r\n      text: \"\",\r\n      link: \"\"\r\n    };\r\n  }\r\n  handleBackground = e => {\r\n    this.setState({background: e.target.value})\r\n  }\r\n  handleTitle = e => {\r\n    this.setState({title: e.target.value})\r\n  }\r\n  handleSubtitle = e => {\r\n    this.setState({subtitle: e.target.value})\r\n  }\r\n  handleText = e => {\r\n    this.setState({text: e.target.value})\r\n  }\r\n  handleLink = e => {\r\n    this.setState({link: e.target.value})\r\n  }\r\n  render() {\r\n    const { open } = this.state;\r\n    const {background, title, subtitle, text, link} = this.state;\r\n    return (\r\n      <div>\r\n        <RB.Button\r\n          variant=\"link\"\r\n          onClick={() => this.setState({ open: !open })}\r\n          aria-controls=\"example-collapse-text\"\r\n          aria-expanded={open}\r\n        >Test Palette\r\n        </RB.Button>\r\n        \r\n        <RB.Collapse in={this.state.open} className=\"text-left palette-collapse\">\r\n          <div className=\"row\">\r\n          \r\n            <RB.Form className=\"col-12 col-md-4 offset-md-2\">\r\n              <RB.Form.Group as={RB.Row} controlId=\"background\">\r\n                <RB.Form.Label column xs=\"6\" className=\"text-right\">Background Color</RB.Form.Label>\r\n                <RB.Col xs=\"4\">\r\n                  <RB.Form.Control type=\"text\" placeholder=\"FFFFFF\" value={background} onChange={(e) => {this.handleBackground(e)}} />\r\n                </RB.Col>\r\n              </RB.Form.Group>\r\n\r\n              <RB.Form.Group as={RB.Row} controlId=\"title\">\r\n                <RB.Form.Label column xs=\"6\" className=\"text-right\">Title Color</RB.Form.Label>\r\n                <RB.Col xs=\"4\">\r\n                  <RB.Form.Control type=\"text\" placeholder=\"000000\" value={title} onChange={(e) => {this.handleTitle(e)}} />\r\n                </RB.Col>\r\n              </RB.Form.Group>\r\n\r\n              <RB.Form.Group as={RB.Row} controlId=\"subtitle\">\r\n                <RB.Form.Label column xs=\"6\" className=\"text-right\">Subtitle Color</RB.Form.Label>\r\n                <RB.Col xs=\"4\">\r\n                  <RB.Form.Control type=\"text\" placeholder=\"000000\" value={subtitle} onChange={(e) => {this.handleSubtitle(e)}} />\r\n                </RB.Col>\r\n              </RB.Form.Group>\r\n\r\n              <RB.Form.Group as={RB.Row} controlId=\"body\">\r\n                <RB.Form.Label column xs=\"6\" className=\"text-right\">Body Text Color</RB.Form.Label>\r\n                <RB.Col xs=\"4\">\r\n                  <RB.Form.Control type=\"text\" placeholder=\"000000\" value={text} onChange={(e) => {this.handleText(e)}} />\r\n                </RB.Col>\r\n              </RB.Form.Group>\r\n\r\n              <RB.Form.Group as={RB.Row} controlId=\"link\">\r\n                <RB.Form.Label column xs=\"6\" className=\"text-right\">Link Color</RB.Form.Label>\r\n                <RB.Col xs=\"4\">\r\n                  <RB.Form.Control type=\"text\" placeholder=\"000000\" value={link} onChange={(e) => {this.handleLink(e)}} />\r\n                </RB.Col>\r\n              </RB.Form.Group>\r\n            </RB.Form>\r\n\r\n            <RB.Card className=\"offset-2 offset-md-0 col-8 col-md-4\" style={{backgroundColor: \"#\" + background}}>\r\n              <RB.Card.Body>\r\n                <RB.Card.Title className=\"font-weight-bold h4\" style={{color: \"#\" + title}}>Test Palette</RB.Card.Title>\r\n                <RB.Card.Subtitle className=\"mb-2 text-muted\" style={{color: \"#\" + subtitle}}>An example Usage</RB.Card.Subtitle>\r\n                <RB.Card.Text style={{color: \"#\" + text}}>\r\n                  Some quick example text to color the title, subtitle, content, link and background.\r\n                </RB.Card.Text>\r\n                <RB.Card.Text style={{color: \"#\" + text}}>\r\n                  To color an element, change the input color in the text fields beside.\r\n                </RB.Card.Text>\r\n                <RB.Card.Link href=\"#\" className=\"font-weight-bold\" style={{color: \"#\" + link}}>A Link</RB.Card.Link>\r\n                <RB.Card.Link href=\"#\" className=\"font-weight-bold\" style={{color: \"#\" + link}}>Another Link</RB.Card.Link>\r\n              </RB.Card.Body>\r\n            </RB.Card>  \r\n          </div>\r\n        </RB.Collapse>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Paragraph;\r\n","import React, { Component } from 'react';\nimport Palette from './Palette';\nimport Pattern from './Pattern';\nimport RPalette from './RPalette';\nimport RPattern from './RPattern';\nimport * as RB from 'react-bootstrap';\n// import logo from './logo.svg';\nimport './App.css';\nimport Paragraph from './Paragraph';\n// const $ = window.$;\n\nclass App extends Component {\n  componentDidMount() {\n    \n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"shadow-sm\">\n          {/* <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p> */}\n          <div className=\"container\">\n          <h1>Colours and Patterns</h1>\n          <p>A simple listing of colors and patterns for you.</p>\n        </div>\n        </header>\n        <main>\n          <RB.Tabs defaultActiveKey=\"palette\" id=\"tab\" className=\"nav-tabs\">\n            <RB.Tab eventKey=\"palette\" title=\"Palette\">\n              <section>\n                <h2>♥ Palette Listing ♥</h2>\n                <Paragraph background=\"\" heading=\"\" text=\"\" link=\"\" button=\"\" buttonText=\"\"/>\n                <RPalette />\n                <Palette />\n              </section>\n            </RB.Tab>\n            <RB.Tab eventKey=\"pattern\" title=\"Pattern\">\n              <section>\n                <h2>♥ Pattern Listing ♥</h2>\n                <RPattern />\n                <Pattern />\n              </section>\n            </RB.Tab>\n          </RB.Tabs>;\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}